{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"CFT provision a puppetclient and gitlab",
   "Parameters":{
      "KeyName":{
         "Description":"Name of an existing EC2 KeyPair to enable SSH access to the instances",
         "Type":"String",
         "Default":"pair01",
         "MinLength":"1",
         "MaxLength":"64",
         "AllowedPattern":"[-_ a-zA-Z0-9]*",
         "ConstraintDescription":"Can contain only alphanumeric characters, spaces, dashes and underscores."
      },
      "Subnet":{
         "Description":"Subnet ID",
         "Type":"String",
         "Default":"subnet-fe621888",
         "ConstraintDescription":"must be the id of an existing Subnet."
      },
      "PrivateBucket":{
         "Description":"S3 bucket for storing credentials",
         "Type":"String",
         "Default":"ditcpmedcreds-abi02",
         "ConstraintDescription":"Must be a valid S3 Bucket"
      },
      "PublicBucket":{
         "Description":"S3 bucket for storing build artifacts",
         "Type":"String",
         "Default":"puppet-abi02",
         "ConstraintDescription":"Must be a valid S3 Bucket"
      },
      "InstanceType":{
         "Description":"DevClient03 EC2 instance type",
         "Type":"String",
         "Default":"t2.micro",
         "ConstraintDescription":"Must be a valid EC2 instance type."
      }
   },
   "Resources":{
      "DevClient03":{
         "Type":"AWS::EC2::Instance",
         "Metadata":{
            "AWS::CloudFormation::Init":{
               "config":{
                  "packages":{
                     "apt":{
                        "tomcat6":[

                        ],
                        "ntp":[

                        ],
                        "apache2":[

                        ],
                        "awscli":[

                        ],
                        "puppet-agent":[

                        ]
                     }
                  },
                  "files":{
                     "/etc/puppetlabs/puppet/puppet.conf":{
                        "content":{
                           "Fn::Join":[
                              "",
                              [
                                 "[main]\n",
                                 "server = puppet\n",
                                 "environment = development\n",
                                 "runinterval = 1m\n",
                                 "strict_variables = true\n\n",
                                 "[master]\n",
                                 "vardir = /opt/puppetlabs/server/data/puppetserver\n",
                                 "logdir = /var/log/puppetlabs/puppetserver\n",
                                 "rundir = /var/run/puppetlabs/puppetserver\n",
                                 "pidfile = /var/run/puppetlabs/puppetserver/puppetserver.pid\n",
                                 "codedir = /etc/puppetlabs/code\n"
                              ]
                           ]
                        },
                        "mode":"000755",
                        "owner":"root",
                        "group":"root"
                     },
                      "/etc/environment":{
                        "content":{
                           "Fn::Join":[
                              "",
                              [
                                 "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/puppetlabs/bin\n"
                                 
                              ]
                           ]
                        },
                        "mode":"000755",
                        "owner":"root",
                        "group":"root"
                     }
                  },
                  "services":{
                     "sysvinit":{ 
                     "puppet":{
                        "enabled":"true",
                        "ensureRunning":"true"
                       }
                     }
                  }
               }
            }
         },
         "Properties":{
            "ImageId":"ami-807876e3",
            "NetworkInterfaces":[
               {
                  "AssociatePublicIpAddress":true,
                  "DeleteOnTermination":true,
                  "DeviceIndex":"0",
                  "SubnetId":{
                     "Ref":"Subnet"
                  },
                  "GroupSet":[
                     "sg-486a112f"
                  ]
               }
            ],
            "IamInstanceProfile":"S3_Access",
            "InstanceType":{
               "Ref":"InstanceType"
            },
            "KeyName":"pair01",
            "Tags":[
               {
                  "Key":"Name",
                  "Value":"DevClient04"
               }
            ],
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash -ex\n",
                        "mkdir ~/.aws\n",
                        "touch ~/.aws/conf\n",
                        "echo [default]>>~/.aws/conf\n",
                        "echo output = json>>~/.aws/conf\n",
                        "echo region = ap-southeast-2>>~/.aws/conf\n",
                        "cd ~ && wget https://apt.puppetlabs.com/puppetlabs-release-pc1-trusty.deb\n",
                        "dpkg -i puppetlabs-release-pc1-trusty.deb\n",
                        "apt-get update\n",
                        "apt-get -y install python-setuptools\n",
                        "mkdir aws-cfn-bootstrap-latest\n",
                        "curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1\n",
                        "easy_install aws-cfn-bootstrap-latest\n",
                        "/usr/local/bin/cfn-init --stack ",
                        {
                           "Ref":"AWS::StackName"
                        },
                        " --resource DevClient03",
                        " --region ",
                        {
                           "Ref":"AWS::Region"
                        },
                        "\n"
                     ]
                  ]
               }
            }
         }
      }
   }
}
